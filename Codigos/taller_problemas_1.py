# -*- coding: utf-8 -*-
"""Taller problemas 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14B-dJbYZOy_Zvjdo0NoJgTRyYvVno95U
"""

import sympy
from sympy import *

"""**Clase 1**

1.1.6 #3
"""

#El centroide de cualquier triangulo se obtiene calculando el promedio de todas las coordenadas de sus vertices
def centroide(a,b,c):
  c=(a+b+c)/3
  return c

centroide(Matrix([[4, 5, 6]]),Matrix([[1, 2, 5]]),Matrix([[3, 1, 0]]))

centroide(Matrix([[4, 5]]),Matrix([[1, 2]]),Matrix([[3, 1]]))

"""1.2.7 #6"""

a= Matrix([1,2,3])
b= Matrix([4,5,6])
c= Matrix([3,2,1])
d= Matrix([6,5,4])
e1= Matrix([1,0,0])
e2= Matrix([0,1,0])
e3= Matrix([0,0,1])

#a)
a+b+c+d

a+b-c-d

a-b+c-d

-a+b-c+d

#b)
def angulo(v,e):
  ang=acos((v.dot(e))/(v.norm()*e.norm()))
  return ang

angulo(a,e1)

angulo(a,e2)

angulo(a,e3)

angulo(b,e1)

angulo(b,e2)

angulo(c,e1)

angulo(c,e2)

angulo(c,e3)

angulo(d,e1)

angulo(d,e2)

angulo(d,e3)

#c)
a.norm()

b.norm()

c.norm()

d.norm()

#d)
angulo(a,b)

angulo(c,d)

#e)
def proy(u,v):
  proyeccion= ((u.dot(v))/(v.norm()**2))*v
  return proyeccion

proy(a,b)

#f)
#El producto triple representa volumen, si es 0 significa que estan en el mismo plano
def triple(u,v,w):
  producto= (u.cross(v)).dot(w)
  return producto

triple(a,b,c)

triple(a,b,d)

#g)
calculo= (a+b).dot(c+d)
calculo

#h)
p1= a.cross(b)
p1

p2= b.cross(c)
p2

p3= c.cross(d)
p3

angulo(p1,d)

angulo(p2,d)

angulo(p3,d)

#i)
triple(a,b,c)

"""**Clase 2**

1.5.7 #13
"""

θ= symbols('θ')
x = cos(θ)
y = sin(θ)

F= Matrix([-y/(x**2+y**2),x/(x**2+y**2)])
F

r=Matrix([x,y])
r

dr=r.diff(θ)
dr

punto= F.dot(dr)
punto

#a)
#Signo negativo al ser el trabajo en contra
sentido1= -integrate(punto,(θ,0,pi))
sentido1

#b)
sentido2= -integrate(punto,(θ,0,-pi))
sentido2